/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package edunova.view;

import edunova.controller.ObradaNatjecanje;
import edunova.controller.ObradaRezultat;
import edunova.controller.ObradaRiba;
import edunova.controller.ObradaRibic;
import edunova.model.Natjecanje;
import edunova.model.Riba;
import edunova.model.Ribic;
import edunova.model.Sudionik;
import edunova.model.Rezultat;
import edunova.util.Pomocno;
import java.time.LocalDate;
import java.time.ZoneId;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/**
 *
 * @author Korisnik
 */
public class ProzorRezultat extends javax.swing.JFrame {
    
    private ObradaRezultat obrada;
    private ObradaRiba obradaRiba;
    private ObradaRibic obradaRibic;
    private ObradaNatjecanje obradaNatjecanje;
    private Izbornik izbornik;
    private int selectedIndex;

    /**
     * Creates new form ProzorRezultat
     */
    public ProzorRezultat(Izbornik izbornik) {
        initComponents();
        this.izbornik = izbornik;
        obrada = new ObradaRezultat();
        obradaNatjecanje = new ObradaNatjecanje();
        obradaRiba = new ObradaRiba();
        obradaRibic = new ObradaRibic();
        postavke();
        ucitaj();
    }

 

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        lstEntiteti = new javax.swing.JList<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        lstRibiciNaNatjecanju = new javax.swing.JList<>();
        cmbRiba = new javax.swing.JComboBox<>();
        btnDodajSudionika = new javax.swing.JButton();
        btnObrisiSudionika = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        lstRibiciUBazi = new javax.swing.JList<>();
        txtMasa = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lstEntiteti.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        lstEntiteti.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                lstEntitetiValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(lstEntiteti);

        lstRibiciNaNatjecanju.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                lstRibiciNaNatjecanjuValueChanged(evt);
            }
        });
        jScrollPane2.setViewportView(lstRibiciNaNatjecanju);

        btnDodajSudionika.setText("<");

        btnObrisiSudionika.setText(">");

        lstRibiciUBazi.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane4.setViewportView(lstRibiciUBazi);

        jLabel1.setText("Ribiči na natjecanju");

        jLabel2.setText("Vrsta ribe");

        jLabel3.setText("Masa");

        jLabel4.setText("Ribiči");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(77, 77, 77)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(84, 84, 84)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(btnObrisiSudionika)
                                    .addComponent(btnDodajSudionika)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(39, 39, 39)
                                .addComponent(cmbRiba, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(txtMasa, javax.swing.GroupLayout.DEFAULT_SIZE, 71, Short.MAX_VALUE)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(32, 32, 32)))))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 279, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(13, 13, 13)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addGap(5, 5, 5)
                                    .addComponent(jLabel1)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(cmbRiba, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel3)
                                .addGap(2, 2, 2)
                                .addComponent(txtMasa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(42, 42, 42)
                                .addComponent(btnDodajSudionika)
                                .addGap(18, 18, 18)
                                .addComponent(btnObrisiSudionika)))))
                .addContainerGap(15, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void lstEntitetiValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_lstEntitetiValueChanged
        if (evt.getValueIsAdjusting()
                || lstEntiteti.getSelectedValue() == null) {
            return;
        }
        obrada.setEntitet(lstEntiteti.getSelectedValue());
        popuniView();
        

    }//GEN-LAST:event_lstEntitetiValueChanged

    private void lstRibiciNaNatjecanjuValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_lstRibiciNaNatjecanjuValueChanged
        if (evt.getValueIsAdjusting()
                || lstRibiciNaNatjecanju.getSelectedValue() == null) {
            return;
        }    }//GEN-LAST:event_lstRibiciNaNatjecanjuValueChanged


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDodajSudionika;
    private javax.swing.JButton btnObrisiSudionika;
    private javax.swing.JComboBox<Riba> cmbRiba;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JList<Rezultat> lstEntiteti;
    private javax.swing.JList<Sudionik> lstRibiciNaNatjecanju;
    private javax.swing.JList<String> lstRibiciUBazi;
    private javax.swing.JTextField txtMasa;
    // End of variables declaration//GEN-END:variables

    private void postavke() {
        setTitle(Pomocno.NAZIV_APLIKACIJE
                + " Grupe");
        ucitajNatjecanja();
        ucitajRibe();
        ucitajRibice();
        
        lstRibiciNaNatjecanju.setModel(new DefaultListModel<>());
    }
    
    private void ucitaj() {
       lstEntiteti.setModel(new RibolovListModel<>(obrada.read()));
       /* if (lstEntiteti.getModel().getSize() > 0) {
            lstEntiteti.setSelectedIndex(selectedIndex);
        }*/
    }
    
    private void ucitajNatjecanja() {
    }
    
    private void ucitajRibe() {
        DefaultComboBoxModel<Riba> r
                = new DefaultComboBoxModel<>();
        r.addAll(new ObradaRiba().read());
        cmbRiba.setModel(r);
    }
    
    private void ucitajRibice() {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }
    
    private Sudionik kreirajSudionika(Natjecanje n, Riba rb, Ribic rc, Integer m) {
        Sudionik c = new Sudionik(n, rb, rc, m);
        c.setNatjecanje(n);
        c.setRiba(rb);
        c.setRibic(rc);
        c.setMasa(m);
        return c;
    }
    
    private void dodajSudionika() {
        
        if (lstRibiciUBazi.getSelectedValue() == null) {
            return;
        }
        
        DefaultListModel<Sudionik> sudionici = (DefaultListModel<Sudionik>) lstRibiciNaNatjecanju.getModel();
        
        for (int i = 0; i < sudionici.getSize(); i++) {
            if (sudionici.get(i).getRibic().getSifra().equals(lstRibiciUBazi.getSelectedValue())) {
                JOptionPane.showMessageDialog(rootPane,
                        "Ribič je već dodan na natjecanje");
                return;
            }
        }
        /*
         DefaultListModel<Sudionik> m = (DefaultListModel<Sudionik>) lstSudioniciNatjecanja.getModel();
        m.addElement(kreirajSudionika(obrada.getEntitet(), lstRibici.getSelectedValue(), ""));
         */        
    }

    private void pocistiView() {
        txtMasa.setText("");
        cmbRiba.setSelectedItem(null);
        
    }
    
    private void popuniView() {
        var e = obrada.getEntitet();
        txtMasa.setText(e.getMasa().toString());
        cmbRiba.setSelectedItem(e.getRiba());
        
        lstRibiciUBazi.setModel(
                new RibolovListModel<>(e.getRibic())
        );
        
    }
    
    private void popuniModel() {
        var e = obrada.getEntitet();
        
        e.setRiba((Riba) cmbRiba.getSelectedItem());
        
        lstRibiciNaNatjecanju.setModel(new RibolovListModel<>(e.getRibic()));
        lstRibiciUBazi.setModel(
                new RibolovListModel<>(e.getRibic())
        );
        
        DefaultListModel<Clan> m
                = (DefaultListModel<Clan>) lstClanoviGrupe.getModel();
        
        List<Sudionik> noviClanovi = new ArrayList<>();
        for (int i = 0; i < m.getSize(); i++) {
            noviClanovi.add(m.getElementAt(i));
        }
        obrada.setNoviClanovi(noviClanovi);
        
    }
    
}
